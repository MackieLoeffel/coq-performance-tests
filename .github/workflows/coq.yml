name: CI (Coq)

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        env:
        - { COQ_VERSION: "master", COQ_PACKAGE: "coq        libcoq-ocaml-dev"       , PPA: "ppa:jgross-h/coq-master-daily"             , TIMED: "1", SLEEP_TIME: "1" }
        - { COQ_VERSION: "8.11.2", COQ_PACKAGE: "coq-8.11.2 libcoq-8.11.2-ocaml-dev", PPA: "ppa:jgross-h/many-coq-versions-ocaml-4-05" , TIMED: "1", SLEEP_TIME: "30" }
        - { COQ_VERSION: "8.10.2", COQ_PACKAGE: "coq-8.10.2 libcoq-8.10.2-ocaml-dev", PPA: "ppa:jgross-h/many-coq-versions-ocaml-4-05" , TIMED: "1", SLEEP_TIME: "60" }
        - { COQ_VERSION: "8.9.1" , COQ_PACKAGE: "coq-8.9.1  libcoq-8.9.1-ocaml-dev" , PPA: "ppa:jgross-h/many-coq-versions"            , TIMED: "1", SLEEP_TIME: "90" }
        - { COQ_VERSION: "8.8.2" , COQ_PACKAGE: "coq-8.8.2  libcoq-8.8.2-ocaml-dev" , PPA: "ppa:jgross-h/many-coq-versions"            , TIMED: "1", SLEEP_TIME: "120" }

    env: ${{ matrix.env }}

    steps:
    - name: test
      run: |
        mkdir -p foo/$COQ_VERSION
        touch foo/$COQ_VERSION/bar
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: doc-build-test-${{ matrix.env.COQ_VERSION }}
        path: foo

  deploy:

    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          path: doc-build
      - name: Display structure of downloaded files
        run: ls -R
#      - name: Deploy pdfs
#        uses: JamesIves/github-pages-deploy-action@releases/v3
#        with:
#          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#          BRANCH: gh-pages
#          FOLDER: doc-build
#        if: github.ref == 'refs/heads/master' && ( github.event_name == 'push' || github.event_name == 'schedule' )
