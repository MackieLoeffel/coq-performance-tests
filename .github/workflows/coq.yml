name: CI (Coq)

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        env:
        - { COQ_VERSION: "8.11.1", COQ_PACKAGE: "coq-8.11.1 libcoq-8.11.1-ocaml-dev", PPA: "ppa:jgross-h/many-coq-versions-ocaml-4-05" , TIMED: "1", SLEEP_TIME: "30" }
        - { COQ_VERSION: "master", COQ_PACKAGE: "coq libcoq-ocaml-dev"              , PPA: "ppa:jgross-h/coq-master-daily"             , TIMED: "1", SLEEP_TIME: "1" }

    env: ${{ matrix.env }}

    steps:
    - name: install Coq and deps
      run: |
        if [ ! -z "$PPA" ]; then sudo add-apt-repository "$PPA" -y; fi
        sudo apt-get -o Acquire::Retries=30 update -q
        sudo apt-get -o Acquire::Retries=30 install -y --allow-unauthenticated \
          ocaml-findlib \
          $COQ_PACKAGE \
          texlive \
          texlive-latex-extra \
          texlive-bibtex-extra \
          texlive-generic-extra \
          texlive-science \
          texlive-luatex \
          texlive-lang-greek \
          lmodern \
          biber \
          gnuplot-nox \
          wget \
          curl \
          sed \
          grep \
          pdf2svg \
          python \
          python-pygments
    - uses: actions/checkout@v2
    - name: echo build params
      run: |
        echo "::group::lscpu"
        lscpu
        echo "::endgroup::"
        echo "::group::uname -a"
        uname -a
        echo "::endgroup::"
        echo "::group::lsb_release -a"
        lsb_release -a
        echo "::endgroup::"
        echo "::group::etc/machine.sh"
        etc/machine.sh
        echo "::endgroup::"
        echo "::group::ocamlc -config"
        ocamlc -config
        echo "::endgroup::"
        echo "::group::coqc --config"
        coqc --config
        echo "::endgroup::"
        echo "::group::coqc --version"
        coqc --version
        echo "::endgroup::"
        echo "::group::echo | coqtop"
        true | coqtop
        echo "::endgroup::"
    - run: make
    - run: make perf
    - run: sudo make install install-perf
    - run: make pdf
    - run: make doc
    - run: make copy-pdf copy-doc copy-perf OUTPUT="doc-build/${COQ_VERSION}"
    - name: Sleep to avoid conflicts between jobs
      run: sleep ${SLEEP_TIME}
    - name: Deploy pdfs
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BRANCH: gh-pages
        FOLDER: doc-build
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
